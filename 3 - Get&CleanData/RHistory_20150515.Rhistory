setRepositories()
x <- 4L
class(x)
x <- c(4,"a",TRUE)
class(x)
x <- c(1,3,5)
y <- c(3,2,10)
rbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
x<- 1:4
y<- 2:3
x+y
x <- list(2, "a", "b", TRUE)
class(x)
class(x[[2]])
x <- c(2, "a", "b", TRUE)
class(x)
x <- list(2, "a", "b", TRUE)
x[1]
class(x[1])
x <- c(17,14,4,5,13,12,10)
x[x>10]<-4
x <- c(17,14,4,5,13,12,10)
x[x==4]>10
x[x>=10]<-4
x <- c(17,14,4,5,13,12,10)
x[x==10]<-4
read.csv(file="F:\Documents\r_prog\rprog-data-quiz1_data\hw1_data.csv")
read.csv(file="F:/Documents/r_prog/rprog-data-quiz1_data/hw1_data.csv")
read.csv(file="F:/Documents/r_prog/rprog-data-quiz1_data/hw1_data.csv", nrows=2)
data<-read.csv(file="F:/Documents/r_prog/rprog-data-quiz1_data/hw1_data.csv")
head(data)
tail(data)
tail(data,2)
head[complete.cases[data]]
airquality<-data[1:153,]
head[complete.cases[airquality]]
good<-complete.cases[airquality]
good<-complete.cases(airquality)
airquality[good,][1:153,]
head[complete.cases(data)]
head(complete.cases[data])
head(complete.cases(data))
complete.cases(data)
good<-complete.cases(data)
head(data[good])
head(data[good,])
tail(data[good,])
data[47]
data[[47]
]
data
data[47,]
data[47,$Ozone]
data[47,1]
data[47,2]
data[,1]
count(data[,1])
length(data[,1])
is.NA(data[,1])
is.na(data[,1])
length(is.na(data[,1]))
length(data$Ozone)
length(which(is.na(data$Ozone)))
length(which(!is.na(data$Ozone)))
mean(which(!is.na(data$Ozone)))
(data[good,1])
mean(data[good,1])
data[data$Ozone>31,data$Temp>90]
data$Ozone > 31
data[good, data$Ozone>31]
data[good, data$Ozone]
data[good, 1]
data[good, 1>31]
data[data[good, 1]>31]
data[good, 1]>31
data[good, data$Ozone]>31
data[good, $Ozone]>31
data[good, Ozone]>31
data$Ozone>31
data$Temp>90
data$Ozone && data$Temp>90
data$Ozone>31 && data$Temp>90
data$Ozone>31 ANDdata$Temp>90
data$Ozone>31 AND data$Temp>90
goodData<-data[good,]
goodData[data$Ozone>31,]
View(goodData)
data$Ozone>31
goodData$Ozone>31
goodData[goodData$Ozone>31,]
goodData[goodData$Temp>90,]
x<-goodData[goodData$Ozone>31,]
x[x$Temp>90]
x[x$Temp>90,]
mean(x$Temp>90)
x[x$Temp>90,x$Solar.R]
x[x$Temp>90,2]
mean(x[x$Temp>90,2])
mean(goodData[goodData$Month==6,4])
(goodData[goodData$Month==6,4])
(goodData[goodData$Month==6,])
(goodData[goodData$Month==5 || goodData$Month==6,])
mean(data[data$Month==6,4])
max(data[data$Month==5, 1])
(data[data$Month==5, 1])
which(!is.na((data[data$Month==5, 1])))
(!is.na((data[data$Month==5, 1])))
x<-4
class(x)
x<-c(4,TRUE)
class(x)
x<-1:4
y<-2
x+y
clear
cube <- function(x,n) { x^3 }
cube(3)
x <- 1:10
if(x > 5) { x <- 0 }
f<- function(x) {}
f<- function(x) {
g<- function(y) { y+z }
z<- 4
x+g(x)
}
z<- 10
f(3)
x<- 5
y<- if(x<5) {NA} else {10}
h<- function(x, y=NULL, d=3L) {
z<- cbind(x,d)
if(!is.null(y)) z<- z+y
else z<- z+f
g<- x+y/z
if(d==3L) return(g)
g<- g+10
g }
h(3)
f<- 3
h(3)
search()
datestring <- sys.time()
datestring <- sys.time
datestring <- Sys.time()
x
datestring
p<- as.POSITlt(datestring)
p<- as.POSI
Xlt(datestring)
p<- as.POSIXlt(datestring)
p
p$sec
p$yday
unclass(p)
? strptime
x <- 4L
class(x)
x <- c(1,3,5)
y <- c(3,2,10)
rbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
x<- 1:4
y<- 2:3
x+y
x <- c(17,14,4,5,13,12,10)
x[x>10]<-4
read.csv(file="O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/rprog-data-quiz1_data/hw1_data.csv")
data<-read.csv(file="O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/rprog-data-quiz1_data/hw1_data.csv")
head(data)
tail(data)
tail(data,2)
head(complete.cases(data))
airquality<-data[1:153,]
good<-complete.cases(airquality)
airquality[good,][1:153,]
complete.cases(data)
good<-complete.cases(data)
head(data[good,])
length(data[,1])
is.na(data[,1])
length(which(!is.na(data$Ozone)))
mean(which(!is.na(data$Ozone)))
goodData<-data[good,]
goodData[data$Ozone>31,]
goodData[goodData$Ozone>31,]
x<-goodData[goodData$Ozone>31,]
x[x$Temp>90,]
x[x$Temp>90,2]
mean(x[x$Temp>90,2])
(!is.na((data[data$Month==5, 1])))
list.dir
list.dir(path=".")
list.files()
dir
dir()
dir("o:/Git_Repository")
dir("o:/Git_Repository/Coursera/")
dir("o:/Git_Repository/Coursera/DataScience/")
dir("o:/Git_Repository/Coursera/DataScience/2 - R_Programming")
dir("o:/Git_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingEnvironment2")
? r.home()
r.home()
R.home()
getwd()
setwd("o:/Git_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingEnvironment2")
sys.getenv()
Sys.getenv()
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment1/pollutantmean.R')
add2 <- function(x, y) {
x + y
}
add2(3,5)
above <- function(x, n = 10) {
use <- x > n
x[use]
}
x<-1:20
above(x)
above(x,12)
columnmean <- function(y, removeNA = TRUE) {
nc <- ncol(y)
means <- numeric(nc)  ##empty vector of nc columns
for(i in 1:nc) {
means[i] <- mean(y[, i], na.rm = removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality, FALSE)
pollutantmean <- function(directory, pollutant, id=1:332) {
dir(directory)
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean <- function(directory, pollutant, id=1:332) {
x<-dir(directory)
x
}
pollutantmean("specdata", "sulfate", 1:10)
dir("specdata")
dir("./specdata")
wd
getwd
getwd()
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
formals(pollutantmean)
body(pollutantmean)
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment1/pollutantmean.R')
pollutantmean("specdata", "sulfate", 1:10)
savehistory("~/RHistory_20150515.Rhistory")
