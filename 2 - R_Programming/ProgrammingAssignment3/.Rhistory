setRepositories()
x <- 4L
class(x)
x <- c(4,"a",TRUE)
class(x)
x <- c(1,3,5)
y <- c(3,2,10)
rbind(x,y)
x <- list(2, "a", "b", TRUE)
x[[1]]
class(x[[1]])
x<- 1:4
y<- 2:3
x+y
x <- list(2, "a", "b", TRUE)
class(x)
class(x[[2]])
x <- c(2, "a", "b", TRUE)
class(x)
x <- list(2, "a", "b", TRUE)
x[1]
class(x[1])
x <- c(17,14,4,5,13,12,10)
x[x>10]<-4
x <- c(17,14,4,5,13,12,10)
x[x==4]>10
x[x>=10]<-4
x <- c(17,14,4,5,13,12,10)
x[x==10]<-4
read.csv(file="F:\Documents\r_prog\rprog-data-quiz1_data\hw1_data.csv")
read.csv(file="F:/Documents/r_prog/rprog-data-quiz1_data/hw1_data.csv")
read.csv(file="F:/Documents/r_prog/rprog-data-quiz1_data/hw1_data.csv", nrows=2)
data<-read.csv(file="F:/Documents/r_prog/rprog-data-quiz1_data/hw1_data.csv")
head(data)
tail(data)
tail(data,2)
head[complete.cases[data]]
airquality<-data[1:153,]
head[complete.cases[airquality]]
good<-complete.cases[airquality]
good<-complete.cases(airquality)
airquality[good,][1:153,]
head[complete.cases(data)]
head(complete.cases[data])
head(complete.cases(data))
complete.cases(data)
good<-complete.cases(data)
head(data[good])
head(data[good,])
tail(data[good,])
data[47]
data[[47]
]
data
data[47,]
data[47,$Ozone]
data[47,1]
data[47,2]
data[,1]
count(data[,1])
length(data[,1])
is.NA(data[,1])
is.na(data[,1])
length(is.na(data[,1]))
length(data$Ozone)
length(which(is.na(data$Ozone)))
length(which(!is.na(data$Ozone)))
mean(which(!is.na(data$Ozone)))
(data[good,1])
mean(data[good,1])
data[data$Ozone>31,data$Temp>90]
data$Ozone > 31
data[good, data$Ozone>31]
data[good, data$Ozone]
data[good, 1]
data[good, 1>31]
data[data[good, 1]>31]
data[good, 1]>31
data[good, data$Ozone]>31
data[good, $Ozone]>31
data[good, Ozone]>31
data$Ozone>31
data$Temp>90
data$Ozone && data$Temp>90
data$Ozone>31 && data$Temp>90
data$Ozone>31 ANDdata$Temp>90
data$Ozone>31 AND data$Temp>90
goodData<-data[good,]
goodData[data$Ozone>31,]
View(goodData)
data$Ozone>31
goodData$Ozone>31
goodData[goodData$Ozone>31,]
goodData[goodData$Temp>90,]
x<-goodData[goodData$Ozone>31,]
x[x$Temp>90]
x[x$Temp>90,]
mean(x$Temp>90)
x[x$Temp>90,x$Solar.R]
x[x$Temp>90,2]
mean(x[x$Temp>90,2])
mean(goodData[goodData$Month==6,4])
(goodData[goodData$Month==6,4])
(goodData[goodData$Month==6,])
(goodData[goodData$Month==5 || goodData$Month==6,])
mean(data[data$Month==6,4])
max(data[data$Month==5, 1])
(data[data$Month==5, 1])
which(!is.na((data[data$Month==5, 1])))
(!is.na((data[data$Month==5, 1])))
x<-4
class(x)
x<-c(4,TRUE)
class(x)
x<-1:4
y<-2
x+y
clear
cube <- function(x,n) { x^3 }
cube(3)
x <- 1:10
if(x > 5) { x <- 0 }
f<- function(x) {}
f<- function(x) {
g<- function(y) { y+z }
z<- 4
x+g(x)
}
z<- 10
f(3)
x<- 5
y<- if(x<5) {NA} else {10}
h<- function(x, y=NULL, d=3L) {
z<- cbind(x,d)
if(!is.null(y)) z<- z+y
else z<- z+f
g<- x+y/z
if(d==3L) return(g)
g<- g+10
g }
h(3)
f<- 3
h(3)
search()
datestring <- sys.time()
datestring <- sys.time
datestring <- Sys.time()
x
datestring
p<- as.POSITlt(datestring)
p<- as.POSI
Xlt(datestring)
p<- as.POSIXlt(datestring)
p
p$sec
p$yday
unclass(p)
? strptime
setwd("O:\\GIT_Repository\\Coursera\\DataScience\\2 - R_Programming\\ProgrammingAssignment3")
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
ff <- gl(3,1, labels=LETTERS[3:1])
ff
ff[1]
switch(ff[1], A = "I am A", B="Bb..", C=" is C")
switch(as.character(ff[1]), A = "I am A", B="Bb..", C=" is C")
eval(ff)
switch(outcome,
"heart attack"  = (outCol <- 11),
"heart failure" = (outCol <- 17),
"pneumonia"     = (outCol <- 23))
outcome <- "heart failure"
switch(outcome,
"heart attack"  = (outCol <- 11),
"heart failure" = (outCol <- 17),
"pneumonia"     = (outCol <- 23))
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/best.R')
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/best.R')
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
best("TX", "heart attack)
""
"
best("TX", "heart attack")
output
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/best.R')
output
best("TX", "heart attack")
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/best.R')
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankhospital.R')
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/best.R')
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankhospital.R')
rankhospital("MN", "heart attack", "help")
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankhospital.R')
rankhospital("MN", "heart attack", "help")
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
rankhospital("MN", "heart attack", "help")
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankhospital.R')
rankhospital("AL", "pneumonia", "help")
rankhospital("AL", "pneumonia", 10)
rankhospital("AL", "pneumonia", "best")
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankhospital.R')
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankhospital.R')
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/best.R')
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankhospital.R')
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
states <- sort(unique(data$State))
output_states <- split(data[,c("Hospital.Name", "State", 11)], states)
output_states <- split(data[,c("Hospital.Name", "State", 11)], data$State)
output_states <- split(data[,c("Hospital.Name", "State", "Hospital.30.Day.Death..Mortality..Rates.from.Heart.Attack")], data$State)
data.names
data.Names
Names(data)
names(data)
names(data)[17]
output_states <- split(data[,c("Hospital.Name", "State", names(data)[17])], data$State)
output_states <- split(data[,c("Hospital.Name", "State", names(data)[11])], data$State)
output_states <- split(data[,c("Hospital.Name", "State", names(data)[23])], data$State)
output_states <- split(data[,c("Hospital.Name", "State", names(data)[23])], states)
output_states <- split(data[,c(names(data)[2], "State", names(data)[23])], data$State)
ordered_output <- order(output_states[3], output_states[1], na.last=NA)
ordered_output <- output_states[order(output_states[3], output_states[1], na.last=NA)]
ordered_output <- output_states[order(output_states[,3], output_states[,1], na.last=NA)]
ordered_output <- output_states[order(output_states[3], output_states[,1], na.last=NA)]
order(output_states[3])
output_states[3]
output_states[1[1]]
output_states[1][1]
names(output_states)
str(output_states)
str(output_states[1])
str(output_states[1][3])
str(output_states[1][2])
str(output_states[1][1])
str(output_states[1]$State)
str(output_states[50])
?factor
str(output_states[[50]])
str(output_states[[50]][1])
str(output_states[[50]][2])
str(output_states[[50]][3])
?order
ordered_output <- output_states[order(output_states[[,3]], output_states[[,1]], na.last=NA)]
ordered_output <- output_states[with(output_states, order(output_states[[3]], output_states[[1]])), ]
ordered_output <- output_states[order(output_states[[,3]], output_states[[,1]])), ]
ordered_output <- output_states[order(output_states[[,3]], output_states[[,1]]), ]
ordered_output <- output_states[order(output_states[[]][,3], output_states[[]][,1]), ]
ordered_output <- output_states[order(output_states[[1]][,3], output_states[[1]][,1]), ]
ordered_output <- output_states[order(output_states[[1]][3], output_states[[1]][1]), ]
output_states[[1]][3]
order(output_states[[1]][3])
order(output_states[[1]][3],)
ouput_states[order(output_states[[1]][3]),]
output_states[order(output_states[[1]][3]),]
list.dfs <- list(df1 = data.frame(var1 = c(1:3), var2 = c(1:3), var3 = c(1:3)),
df2 = data.frame(var1= c(1:3), var2 = c(1:3), var3 = c(1:3)),
df3 = data.frame(var1= c(1:3), var2 = c(1:3), var3 = c(3:1)))
list.dfs[[1]]
list.dfs <- list(df1 = data.frame(var1 = c(1:3), var2 = c(4:6), var3 = c(7:9)),
df2 = data.frame(var1= c(a:c), var2 = c(d:f), var3 = c(g:i)),
df3 = data.frame(var1= c(11:13), var2 = c(14:16), var3 = c(17:19)))
list.dfs <- list(df1 = data.frame(var1 = c(1:3), var2 = c(4:6), var3 = c(7:9)),
df2 = data.frame(var1= c("a":"c"), var2 = c("d":"f"), var3 = c("g":"i")),
df3 = data.frame(var1= c(11:13), var2 = c(14:16), var3 = c(17:19)))
list.dfs[[1]]
list.dfs[[2]]
list.dfs[[3]]
list.dfs[[3]][1]
list.dfs <- list(df1 = data.frame(var1 = c(1:3), var2 = c(4:6), var3 = c(7:9)),
df2 = data.frame(var1= c("a","b","c"), var2 = c("d","e","f"), var3 = c("g","h","i")),
df3 = data.frame(var1= c(11:13), var2 = c(14:16), var3 = c(17:19)))
list.dfs[[2]]
output_states[[1]]
output_states[[1]]
output_states[[1]][order(output_states[[1]][3], na.last=NA),]
output_states[[1]][,3] <- as.numeric(output_states[[1]][,3])
output_states[[1]][order(output_states[[1]][3], na.last=NA),]
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankall.R')
out<-rankall("heart attack", 20)
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankall.R')
getwd
getwd()
out<-rankall("heart attack", 20)
out<-rankall("heart attack", 20)
debugSource('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankall.R')
debugSource('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankall.R')
out<-rankall("heart attack", 20)
debugSource('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankall.R')
out<-rankall("heart attack", 20)
output_states[[i]][,3] <- as.numeric(output_states[,3])
output_states[[i]][,3] <- as.numeric(output_states[[i]][,3])
debugSource('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankall.R')
out<-rankall("heart attack", 20)
debugSource('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankall.R')
out<-rankall("heart attack", 20)
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankall.R')
out$AK
length(out[[1]][3])
nrows(out[[1]])
nrow(out[[1]])
rbind
?rbind
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankall.R')
out<-rankall("heart attack", 20)
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankall.R')
out<-rankall("heart attack", 20)
out<-rankall("heart attack", 20)
nrow(output_states[[i]])
debugSource('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankall.R')
output_states[[i]][rank, 1]
output_states[[i]][rank, 2])
output_states[[i]][rank, 2]
output_states[[i]][1, 2]
c(output_states[[i]][rank, 1], output_states[[i]][1, 2])
names(output_final)
names(output_final)<-c(names(output_states)[1], names(output_states)[2])
output_final<-data.frame(names(output_states)[1],names(output_states)[2])
names(output_final)<-c(names(output_states)[1], names(output_states)[2])
names(output_final)<-c(names(output_states[[i]][1]), names(output_states[[i]][2]))
output_final <- data.frame(matrix(ncol=2, nrow = 0))
names(output_final)<-c(names(output_states[[i]][1]), names(output_states[[i]][2]))
output_final <- rbind(output_final, c(output_states[[i]][rank, 1], output_states[[i]][1, 2]))
output_final <- rbind(output_final, c(output_states[[i]][rank, 1], output_states[[i]][1, 2]))
names(output_final)<-c(names(output_states[[i]][1]), names(output_states[[i]][2]))
debugSource('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankall.R')
?matrix
output_final <- data.frame(matrix(ncol=2, nrow = 0))
names(output_final)<-c(names(output_states[[1]][1]), names(output_states[[1]][2]))
output_final <- rbind(output_final, c(output_states[[i]][rank, 1], output_states[[i]][1, 2]))
output_final <- data.frame(matrix(ncol=2, nrow = 0))
names(output_final)<-c(names(output_states[[1]][1]), names(output_states[[1]][2]))
output_states[[i]][rank, 1]
output_final[i,] <- c(output_states[[i]][rank, 1], output_states[[i]][1, 2]))
output_final[i,] <- c(output_states[[i]][rank, 1], output_states[[i]][1, 2])
debugSource('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankall.R')
out<-rankall("heart attack", 20)
tail(output_final)
output_final
head(out,10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/rankall.R')
tail(rankall("heart failure"), 10)
head(rankall("heart attack", 20),10)
submit <- local({
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/submitscript3.R')
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/submitscript3.R')
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/submitscript3.R')
submit <- local({
submit <- local({
submit <- local({
}}}}}
source('~/.active-rstudio-document')
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/submitscript3.R')
source('O:/GIT_Repository/Coursera/DataScience/2 - R_Programming/ProgrammingAssignment3/submitscript3.R')
submit
submit()
submit()
submit(manual=TRUE)
submit(manual=TRUE)
submit(manual=TRUE)
submit(manual=TRUE)
submit(manual=TRUE)
submit(manual=TRUE)
submit(manual=TRUE)
submit(manual=TRUE)
submit(manual=TRUE)
submit(manual=TRUE)
system.time(rep(5,rankall("hear attack", 5)))
system.time(rep(5,rankall("heart attack", 5)))
system.time(replicate(5,rankall("heart attack", 5)))
system.time(replicate(5,rankall("heart attack", 5)))
system.time(replicate(5,rankall("heart attack", 5)))
system.time(replicate(5,rankall("heart attack", 5)))
system.time(replicate(5,rankall("heart attack", 5)))
data <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
out.data <- suppressWarnings(as.numeric(data[, 17], na.rm=TRUE))
head(out.data, 20)
